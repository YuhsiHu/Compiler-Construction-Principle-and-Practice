序号	单词		类型		行号	合法	
1	void		关键字		1	true
2	main		关键字		1	true
3	(		界符		1	true
4	)		界符		1	true
5	{		界符		2	true
6	int		关键字		3	true
7	sum		标志符		3	true
8	=		运算符		3	true
9	0		整形常量		3	true
10	,		界符		3	true
11	a		标志符		3	true
12	=		运算符		3	true
13	5		整形常量		3	true
14	,		界符		3	true
15	b		标志符		3	true
16	=		运算符		3	true
17	4		整形常量		3	true
18	,		界符		3	true
19	c		标志符		3	true
20	;		界符		3	true
21	for		关键字		4	true
22	(		界符		4	true
23	int		关键字		4	true
24	i		标志符		4	true
25	=		运算符		4	true
26	1		整形常量		4	true
27	;		界符		4	true
28	i		标志符		4	true
29	<		运算符		4	true
30	11		整形常量		4	true
31	;		界符		4	true
32	i		标志符		4	true
33	++		运算符		4	true
34	)		界符		4	true
35	{		界符		4	true
36	sum		标志符		5	true
37	=		运算符		5	true
38	sum		标志符		5	true
39	+		运算符		5	true
40	i		标志符		5	true
41	;		界符		5	true
42	for		关键字		6	true
43	(		界符		6	true
44	int		关键字		6	true
45	i		标志符		6	true
46	=		运算符		6	true
47	1		整形常量		6	true
48	;		界符		6	true
49	i		标志符		6	true
50	<		运算符		6	true
51	11		整形常量		6	true
52	;		界符		6	true
53	i		标志符		6	true
54	++		运算符		6	true
55	)		界符		6	true
56	{		界符		6	true
57	a		标志符		7	true
58	=		运算符		7	true
59	(		界符		7	true
60	1		整形常量		7	true
61	+		运算符		7	true
62	2		整形常量		7	true
63	)		界符		7	true
64	*		运算符		7	true
65	3		整形常量		7	true
66	;		界符		7	true
67	}		界符		8	true
68	}		界符		9	true
69	if		关键字		10	true
70	(		界符		10	true
71	a		标志符		10	true
72	>		运算符		10	true
73	b		标志符		10	true
74	)		界符		10	true
75	{		界符		10	true
76	c		标志符		11	true
77	=		运算符		11	true
78	0		整形常量		11	true
79	;		界符		11	true
80	if		关键字		12	true
81	(		界符		12	true
82	a		标志符		12	true
83	>		运算符		12	true
84	c		标志符		12	true
85	)		界符		12	true
86	{		界符		12	true
87	c		标志符		13	true
88	=		运算符		13	true
89	0		整形常量		13	true
90	;		界符		13	true
91	}		界符		14	true
92	else		关键字		15	true
93	{		界符		15	true
94	c		标志符		16	true
95	=		运算符		16	true
96	1		整形常量		16	true
97	;		界符		16	true
98	}		界符		17	true
99	}		界符		18	true
100	else		关键字		19	true
101	{		界符		19	true
102	c		标志符		20	true
103	=		运算符		20	true
104	1		整形常量		20	true
105	;		界符		20	true
106	}		界符		21	true
107	}		界符		22	true
108	#		结束符		23	true
Lexical Analyse succeed
